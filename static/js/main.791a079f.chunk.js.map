{"version":3,"sources":["actions/listsActions.js","actions/cardsActions.js","actions/index.js","reducers/listReducer.js","reducers/index.js","store/index.js","components/TrelloUpdateButton.js","components/TrelloCard.js","components/TrelloActionButton.js","components/TrelloList.js","components/App.js","reportWebVitals.js","index.js"],"names":["addList","title","type","CONSTANTS","ADD_LIST","payload","updateList","listID","UPDATE_LIST","sort","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","draggableId","addCard","text","ADD_CARD","updateCard","cardID","UPDATE_CARD","DRAG_HAPPENED","initialState","localStorage","getItem","listReducer","state","arguments","length","undefined","action","lstID","_toConsumableArray","sNewList","cards","id","concat","ID","cardLen","i","stateCardLen","newCard","map","list","_objectSpread","_action$payload","newDragState","_list$cards","find","card","splice","apply","_listEnd$cards","combineReducers","lists","listsReducer","persistConfig","key","storage","persistedReducer","persistReducer","rootReducer","store","createStore","applyMiddleware","ReduxThunk","persistor","persistStore","TrelloUpdateButton","_Component","_getPrototypeOf2","_this","_classCallCheck","this","_len","args","Array","_key","_possibleConstructorReturn","_getPrototypeOf","call","formOpen","openForm","setState","closeForm","handleInputChange","e","target","value","handleUpdateList","_this$props","props","dispatch","handleUpdateCard","_this$props2","renderUpdateButton","buttonTitle","React","createElement","Icon","style","styles","editListIcon","editCardIcon","onClick","renderForm","Card","overflow","minHeight","minWidth","padding","zIndex","status","TextArea","autoFocus","onBlur","onChange","listTextArea","cardTextArea","formButtonGroup","Button","onMouseDown","varient","color","backgroundColor","marginBottom","marginLeft","cursor","_inherits","_createClass","Component","openFormButtonGroup","display","alignItems","borderRadius","height","width","paddingLeft","marginTop","marginRight","float","resize","outline","border","fontSize","fontWeight","fontFamily","lineHeight","letterSpacing","connect","cardContainer","wordWrap","TrelloCard","_ref","index","Draggable","String","provided","Object","assign","ref","innerRef","draggableProps","dragHandleProps","CardContent","Typography","gutterBottom","TrelloActionButton","_React$Component","handleAddList","handleAddCard","renderAddButton","buttonText","buttonTextOpacity","buttonTextcolor","buttonTextBackground","opacity","background","placeholder","container","titleOff","titleContainer","justifyContent","TrelloList","Droppable","droppableId","droppableProps","App","onDragEnd","result","destination","source","console","log","DragDropContext","className","listsContainer","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","BrowserRouter","basename","StrictMode","Provider","PersistGate"],"mappings":"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","file":"static/js/main.791a079f.chunk.js","sourcesContent":["import { CONSTANTS } from \"../actions\";\r\n\r\nexport const addList = (title) => {\r\n  return {\r\n    type: CONSTANTS.ADD_LIST,\r\n    payload: title,\r\n  };\r\n};\r\nexport const updateList = (title, listID) => {\r\n  return {\r\n    type: CONSTANTS.UPDATE_LIST,\r\n    payload: { title, listID },\r\n  };\r\n};\r\nexport const sort = (\r\n  droppableIdStart,\r\n  droppableIdEnd,\r\n  droppableIndexStart,\r\n  droppableIndexEnd,\r\n  draggableId\r\n) => {\r\n  return {\r\n    type: \"CONSTANTS.DRAG_HAPPENED\",\r\n    payload: {\r\n      droppableIdStart,\r\n      droppableIdEnd,\r\n      droppableIndexStart,\r\n      droppableIndexEnd,\r\n      draggableId,\r\n    },\r\n  };\r\n};\r\n","import { CONSTANTS } from \"../actions\";\r\n\r\nexport const addCard = (listID, text) => {\r\n  return {\r\n    type: CONSTANTS.ADD_CARD,\r\n    payload: { text, listID },\r\n  };\r\n};\r\nexport const updateCard = (text, listID, cardID) => {\r\n  return {\r\n    type: CONSTANTS.UPDATE_CARD,\r\n    payload: { text, listID, cardID },\r\n  };\r\n};\r\n","export * from \"./listsActions\";\r\nexport * from \"./cardsActions\";\r\n\r\nexport const CONSTANTS = {\r\n  ADD_CARD: \"ADD_CARD\",\r\n  ADD_LIST: \"ADD_LIST\",\r\n  UPDATE_LIST: \"UPDATE_LIST\",\r\n  UPDATE_CARD: \"UPDATE_CARD\",\r\n  DRAG_HAPPENED: \"DRAG_HAPPENED\",\r\n};\r\n","import { CONSTANTS } from \"../actions\";\r\n\r\nlet listID = 0;\r\n\r\n// const initialState = [\r\n//   {\r\n//     title: \"Last Episode\",\r\n//     id: 0,\r\n//     cards: [\r\n//       {\r\n//         id: 0,\r\n//         text: \"we have created this card 0\",\r\n//       },\r\n//       {\r\n//         id: 1,\r\n//         text: \"we have created this card 1\",\r\n//       },\r\n//       {\r\n//         id: 2,\r\n//         text: \"we have created this card 2\",\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     title: \"This Episode\",\r\n//     id: 1,\r\n//     cards: [\r\n//       {\r\n//         id: 0,\r\n//         text: \"we have created this card 0 in this episode\",\r\n//       },\r\n//       {\r\n//         id: 1,\r\n//         text: \"we have created this card 1 for this episode\",\r\n//       },\r\n//       {\r\n//         id: 2,\r\n//         text: \"we have created this card 2 here feeeeeeeeeeez we have created this card 2 here feeeeeeeeeeez createdp\",\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     title: \"Next Episode\",\r\n//     id: 2,\r\n//     cards: [\r\n//       {\r\n//         id: 0,\r\n//         text: \"we have created this card 0 in this episode\",\r\n//       },\r\n//       {\r\n//         id: 1,\r\n//         text: \"we have created this card 1 for this episode\",\r\n//       },\r\n//       {\r\n//         id: 2,\r\n//         text: \"we have created this card 2 here\",\r\n//       },\r\n//     ],\r\n//   },\r\n//\r\n//\r\n//\r\n// ];\r\n\r\nlet initialState = localStorage.getItem(\"lists\");\r\n\r\nconst listReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CONSTANTS.ADD_LIST:\r\n      if (state) {\r\n        let lstID = [...state].length;\r\n        const sNewList = {\r\n          title: action.payload,\r\n          cards: [],\r\n          id: `list-${lstID}`,\r\n        };\r\n        // listID += 1;\r\n        return [...state, sNewList];\r\n      } else {\r\n        const newList = {\r\n          title: action.payload,\r\n          cards: [],\r\n          id: `list-${listID}`,\r\n        };\r\n        // listID += 1;\r\n        return [newList];\r\n      }\r\n\r\n    ///////////////////////////////\r\n    // const newList = {\r\n    //   title: action.payload,\r\n    //   cards: [],\r\n    //   id: `list-${listID}`,\r\n    // };\r\n    // listID += 1;\r\n    // if (state) {\r\n    //   return [...state, newList];\r\n    // }\r\n    // return [newList];\r\n    ///////////////////////////////\r\n    case CONSTANTS.ADD_CARD:\r\n      const cardID = () => {\r\n        let cardLen = 0;\r\n        for (var i = 0; i < state.length; i++) {\r\n          let stateCardLen = state[i].cards.length;\r\n          if (stateCardLen === null) {\r\n            stateCardLen = 0;\r\n          }\r\n          cardLen = cardLen + stateCardLen;\r\n        }\r\n        return cardLen;\r\n      };\r\n      let ID = cardID();\r\n      /////////////////////////////////////////////\r\n      if (state) {\r\n        const newCard = {\r\n          id: `card-${ID}`,\r\n          text: action.payload.text,\r\n        };\r\n        // cardID += 1;\r\n        const newState = state.map((list) => {\r\n          if (list.id === action.payload.listID) {\r\n            return { ...list, cards: [...list.cards, newCard] };\r\n          } else {\r\n            return list;\r\n          }\r\n        });\r\n        return newState;\r\n      } else {\r\n        return;\r\n      }\r\n\r\n    case CONSTANTS.UPDATE_LIST:\r\n      // let updatedList;\r\n      const newState = state.map((list) => {\r\n        if (list.id === action.payload.listID) {\r\n          let title = action.payload.title;\r\n          // updatedList = {\r\n          //   id: list.id,\r\n          //   title: action.payload.title,\r\n          //   cards: list.cards,\r\n          // };\r\n          // state = state.pop(list);\r\n          return { ...list, title: title };\r\n        }\r\n        return { ...list };\r\n      });\r\n      return newState;\r\n\r\n    case CONSTANTS.UPDATE_CARD:\r\n      // const updatedCardState = state.map((list) => {\r\n      //   if (list.id === action.payload.listID) {\r\n      //     let cards = list.cards;\r\n      //     const updatedCard = cards.map((card) => {\r\n      //       if (card.id === action.payload.cardID) {\r\n      //         let text = action.payload.text;\r\n      //         let newUpdatedCard = {\r\n      //           id: card.id,\r\n      //           text: text,\r\n      //         };\r\n      //         cards = cards.pop(card);\r\n      //         return { ...list, cards: [cards, newUpdatedCard] };\r\n      //       } else {\r\n      //         return list;\r\n      //       }\r\n      //     });\r\n      //     return updatedCard;\r\n      //   } else {\r\n      //     return { ...list };\r\n      //   }\r\n      // });\r\n      // return updatedCardState;\r\n      return state;\r\n\r\n    case CONSTANTS.DRAG_HAPPENED: {\r\n      const {\r\n        droppableIdStart,\r\n        droppableIdEnd,\r\n        droppableIndexStart,\r\n        droppableIndexEnd,\r\n      } = action.payload;\r\n      const newDragState = [...state];\r\n      if (droppableIdStart === droppableIdEnd) {\r\n        const list = state.find((list) => droppableIdStart === list.id);\r\n        const card = list.cards.splice(droppableIndexStart, 1);\r\n        list.cards.splice(droppableIndexEnd, 0, ...card);\r\n      }\r\n      if (droppableIdStart !== droppableIdEnd) {\r\n        const listStart = state.find((list) => droppableIdStart === list.id);\r\n        const card = listStart.cards.splice(droppableIndexStart, 1);\r\n        const listEnd = state.find((list) => droppableIdEnd === list.id);\r\n        listEnd.cards.splice(droppableIndexEnd, 0, ...card);\r\n      }\r\n      return newDragState;\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default listReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport listsReducer from \"./listReducer\";\r\n\r\nexport default combineReducers({\r\n  lists: listsReducer,\r\n});\r\n","import rootReducer from \"../reducers\";\r\nimport { legacy_createStore as createStore, applyMiddleware } from \"redux\";\r\nimport ReduxThunk from \"redux-thunk\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst persistConfig = {\r\n  key: \"persist-key\",\r\n  storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = createStore(persistedReducer, applyMiddleware(ReduxThunk));\r\nconst persistor = persistStore(store);\r\n\r\nexport default store;\r\nexport { persistor };\r\n","import React, { Component } from \"react\";\r\nimport Icon from \"@mui/material/Icon\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextArea from \"react-textarea-autosize\";\r\n// import TrelloList from \"./TrelloList\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateList, updateCard } from \"../actions\";\r\n// import { isFormOpen } from \"./TrelloList\";\r\n\r\nclass TrelloUpdateButton extends Component {\r\n  state = {\r\n    formOpen: false,\r\n  };\r\n\r\n  openForm = () => {\r\n    this.setState({\r\n      formOpen: true,\r\n    });\r\n  };\r\n\r\n  closeForm = () => {\r\n    this.setState({\r\n      formOpen: false,\r\n    });\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    this.setState({\r\n      text: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleUpdateList = () => {\r\n    const { listID, dispatch } = this.props;\r\n    const { text } = this.state;\r\n\r\n    if (text) {\r\n      this.setState({\r\n        text: \"\",\r\n      });\r\n      dispatch(updateList(text, listID));\r\n    }\r\n\r\n    return;\r\n  };\r\n\r\n  handleUpdateCard = () => {\r\n    const { dispatch, listID, cardID } = this.props;\r\n    const { text } = this.state;\r\n\r\n    if (text) {\r\n      this.setState({\r\n        text: \"\",\r\n      });\r\n      dispatch(updateCard(text, listID, cardID));\r\n    }\r\n\r\n    return;\r\n  };\r\n\r\n  renderUpdateButton = () => {\r\n    const { list } = this.props;\r\n\r\n    const buttonTitle = list ? \"Edit List Title\" : \"Edit Card Text\";\r\n\r\n    return (\r\n      <Icon\r\n        style={list ? styles.editListIcon : styles.editCardIcon}\r\n        title={buttonTitle}\r\n        onClick={this.openForm}\r\n      >\r\n        edit\r\n      </Icon>\r\n    );\r\n  };\r\n\r\n  renderForm = () => {\r\n    const { list } = this.props;\r\n\r\n    const buttonTitle = list ? \"Update list\" : \"Update card\";\r\n\r\n    return (\r\n      <div>\r\n        <Card\r\n          style={{\r\n            overflow: \"visible\",\r\n            minHeight: 80,\r\n            minWidth: 272,\r\n            padding: \"6px 8px 2px\",\r\n            zIndex: 20,\r\n          }}\r\n          status={this.state.formOpen}\r\n        >\r\n          <TextArea\r\n            autoFocus\r\n            onBlur={this.closeForm}\r\n            value={this.state.text}\r\n            onChange={this.handleInputChange}\r\n            style={list ? styles.listTextArea : styles.cardTextArea}\r\n          />\r\n        </Card>\r\n        <div style={styles.formButtonGroup}>\r\n          <Button\r\n            onMouseDown={list ? this.handleUpdateList : this.handleUpdateCard}\r\n            varient=\"contained\"\r\n            style={{\r\n              color: \"white\",\r\n              backgroundColor: \"#026aa7\",\r\n              marginBottom: 8,\r\n            }}\r\n          >\r\n            {buttonTitle}\r\n          </Button>\r\n          <Icon style={{ marginLeft: 8, cursor: \"pointer\" }}>close</Icon>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return this.state.formOpen ? this.renderForm() : this.renderUpdateButton();\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  openFormButtonGroup: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    cursor: \"pointer\",\r\n    borderRadius: 3,\r\n    height: 36,\r\n    width: 262,\r\n    paddingLeft: 10,\r\n  },\r\n  formButtonGroup: {\r\n    marginTop: 8,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  editListIcon: {\r\n    // display: \"none\",\r\n    marginTop: 20,\r\n    marginRight: 10,\r\n    // \"&:hover\": {\r\n    //   display: \"block\",\r\n    // },\r\n  },\r\n  editCardIcon: {\r\n    // display: \"none\",\r\n    float: \"right\",\r\n    marginBottom: 10,\r\n    // \"&:hover\": {\r\n    //   display: \"block\",\r\n    // },\r\n  },\r\n  listTextArea: {\r\n    resize: \"none\",\r\n    outline: \"none\",\r\n    border: \"none\",\r\n    width: \"100%\",\r\n    overflow: \"visible\",\r\n    fontSize: \"1.17em\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  cardTextArea: {\r\n    resize: \"none\",\r\n    outline: \"none\",\r\n    border: \"none\",\r\n    width: \"100%\",\r\n    overflow: \"hidden\",\r\n    fontFamily: \"Roboto\",\r\n    fontWeight: 400,\r\n    fontSize: \"1rem\",\r\n    lineHeight: \"1.5\",\r\n    letterSpacing: \"0.00938em\",\r\n  },\r\n};\r\n\r\nexport default connect()(TrelloUpdateButton);\r\n","import React from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport TrelloUpdateButton from \"./TrelloUpdateButton\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\n\r\nconst TrelloCard = ({ text, listID, cardID, index }) => {\r\n  return (\r\n    <Draggable draggableId={String(cardID)} index={index}>\r\n      {(provided) => (\r\n        <div\r\n          ref={provided.innerRef}\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n        >\r\n          <Card style={styles.cardContainer}>\r\n            <CardContent>\r\n              <Typography gutterBottom>{text}</Typography>\r\n              <TrelloUpdateButton listID={listID} cardID={cardID} />\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  cardContainer: {\r\n    marginBottom: 8,\r\n    wordWrap: \"break-word\",\r\n  },\r\n  // editIcon: {\r\n  //   // display: \"none\",\r\n  //   float: \"right\",\r\n  //   marginBottom: 10,\r\n  // },\r\n};\r\n\r\nexport default TrelloCard;\r\n","import React from \"react\";\r\nimport Icon from \"@mui/material/Icon\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextArea from \"react-textarea-autosize\";\r\nimport { connect } from \"react-redux\";\r\nimport { addList, addCard } from \"../actions\";\r\n\r\nclass TrelloActionButton extends React.Component {\r\n  state = {\r\n    formOpen: false,\r\n  };\r\n\r\n  openForm = () => {\r\n    this.setState({\r\n      formOpen: true,\r\n    });\r\n  };\r\n\r\n  closeForm = (e) => {\r\n    this.setState({\r\n      formOpen: false,\r\n    });\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    this.setState({\r\n      text: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleAddList = () => {\r\n    const { dispatch } = this.props;\r\n    const { text } = this.state;\r\n\r\n    if (text) {\r\n      this.setState({\r\n        text: \"\",\r\n      });\r\n      dispatch(addList(text));\r\n    }\r\n\r\n    return;\r\n  };\r\n\r\n  handleAddCard = () => {\r\n    const { dispatch, listID } = this.props;\r\n    const { text } = this.state;\r\n\r\n    if (text) {\r\n      this.setState({\r\n        text: \"\",\r\n      });\r\n      dispatch(addCard(listID, text));\r\n    }\r\n\r\n    return;\r\n  };\r\n\r\n  renderAddButton = () => {\r\n    const { list } = this.props;\r\n\r\n    const buttonText = list ? \"Add a list\" : \"Add a card\";\r\n    const buttonTextOpacity = list ? \"1\" : \"0.5\";\r\n    const buttonTextcolor = list ? \"white\" : \"inherit\";\r\n    const buttonTextBackground = list ? \"rgba(0,0,0,0.15)\" : \"inherit\";\r\n\r\n    return (\r\n      <div\r\n        onClick={this.openForm}\r\n        style={{\r\n          ...styles.openFormButtonGroup,\r\n          opacity: buttonTextOpacity,\r\n          color: buttonTextcolor,\r\n          background: buttonTextBackground,\r\n        }}\r\n      >\r\n        <Icon>add</Icon>\r\n        <p>{buttonText}</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderForm = () => {\r\n    const { list } = this.props;\r\n\r\n    const placeholder = list\r\n      ? \"Enter list title...\"\r\n      : \"Enter a title for this card...\";\r\n    const buttonTitle = list ? \"Add list\" : \"Add card\";\r\n\r\n    return (\r\n      <div>\r\n        <Card\r\n          style={{\r\n            overflow: \"visible\",\r\n            minHeight: 80,\r\n            minWidth: 272,\r\n            padding: \"6px 8px 2px\",\r\n          }}\r\n        >\r\n          <TextArea\r\n            placeholder={placeholder}\r\n            autoFocus\r\n            onBlur={this.closeForm}\r\n            value={this.state.text}\r\n            onChange={this.handleInputChange}\r\n            style={{\r\n              resize: \"none\",\r\n              outline: \"none\",\r\n              border: \"none\",\r\n              width: \"100%\",\r\n              overflow: \"hidden\",\r\n              //   padding: 8,\r\n              //   borderRadius: 3,\r\n            }}\r\n          />\r\n        </Card>\r\n        <div style={styles.formButtonGroup}>\r\n          <Button\r\n            onMouseDown={list ? this.handleAddList : this.handleAddCard}\r\n            varient=\"contained\"\r\n            style={\r\n              list\r\n                ? { color: \"white\", backgroundColor: \"#003a6af2\" }\r\n                : { color: \"white\", backgroundColor: \"#026aa7\" }\r\n            }\r\n          >\r\n            {buttonTitle}\r\n          </Button>\r\n          <Icon style={{ marginLeft: 8, cursor: \"pointer\" }}>close</Icon>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return this.state.formOpen ? this.renderForm() : this.renderAddButton();\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  openFormButtonGroup: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    cursor: \"pointer\",\r\n    borderRadius: 3,\r\n    height: 36,\r\n    width: 262,\r\n    paddingLeft: 10,\r\n  },\r\n  formButtonGroup: {\r\n    marginTop: 8,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n};\r\n\r\nexport default connect()(TrelloActionButton);\r\n","import React from \"react\";\r\nimport TrelloCard from \"./TrelloCard\";\r\nimport TrelloActionButton from \"./TrelloActionButton\";\r\nimport TrelloUpdateButton from \"./TrelloUpdateButton\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\n\r\nconst TrelloList = ({ title, cards, listID }) => {\r\n  return (\r\n    <Droppable droppableId={String(listID)}>\r\n      {(provided) => (\r\n        <div\r\n          {...provided.droppableProps}\r\n          ref={provided.innerRef}\r\n          style={styles.container}\r\n        >\r\n          <div style={styles.titleContainer}>\r\n            <h3 style={styles.title}>{title}</h3>\r\n            {/* <h3 style={status ? styles.titleOff : styles.title}>{title}</h3> */}\r\n            <TrelloUpdateButton list listID={listID} />\r\n          </div>\r\n          {cards.map((card, index) => (\r\n            <TrelloCard\r\n              listID={listID}\r\n              cardID={card.id}\r\n              key={card.id}\r\n              text={card.text}\r\n              index={index}\r\n            />\r\n          ))}\r\n          <TrelloActionButton listID={listID} />\r\n          {provided.placeholder}\r\n        </div>\r\n      )}\r\n    </Droppable>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  container: {\r\n    backgroundColor: \"#dfe3e6\",\r\n    borderRadius: 3,\r\n    width: 300,\r\n    padding: 8,\r\n    height: \"100%\",\r\n    marginRight: 8,\r\n    cursor: \"pointer\",\r\n    zIndex: 10,\r\n  },\r\n  title: {\r\n    paddingLeft: 10,\r\n  },\r\n  titleOff: {\r\n    display: \"none\",\r\n  },\r\n  titleContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  // editIcon: {\r\n  //   // display: \"none\",\r\n  //   marginTop: 20,\r\n  //   marginRight: 10,\r\n  // },\r\n};\r\n\r\nexport default TrelloList;\r\n","import React, { Component } from \"react\";\nimport TrelloList from \"./TrelloList\";\nimport { connect } from \"react-redux\";\nimport TrelloActionButton from \"./TrelloActionButton\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport { sort } from \"../actions\";\n// import { HashRouter } from \"react-router-dom\";\n\nclass App extends Component {\n  onDragEnd = (result) => {\n    const { destination, source, draggableId } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    this.props.dispatch(\n      sort(\n        source.droppableId,\n        destination.droppableId,\n        source.index,\n        destination.index,\n        draggableId\n      )\n    );\n  };\n\n  render() {\n    const { lists } = this.props;\n    console.log(lists);\n\n    if (lists) {\n      return (\n        // <HashRouter basename=\"/\">\n        <DragDropContext onDragEnd={this.onDragEnd}>\n          <div className=\"App\">\n            <h2 style={{ color: \"white\", marginLeft: 15 }}>\n              Trello Board Clone\n            </h2>\n            <div style={styles.listsContainer}>\n              {lists.map((list) => (\n                <TrelloList\n                  listID={list.id}\n                  key={list.id}\n                  title={list.title}\n                  cards={list.cards}\n                />\n              ))}\n              <TrelloActionButton list />\n            </div>\n          </div>\n        </DragDropContext>\n        // </HashRouter>\n      );\n    } else {\n      return (\n        // <HashRouter base=\"/\">\n        <DragDropContext onDragEnd={this.onDragEnd}>\n          <div className=\"App\">\n            <h2 style={{ color: \"white\", marginLeft: 15 }}>\n              Trello Board Clone\n            </h2>\n            <div style={styles.listsContainer}>\n              <TrelloActionButton list />\n            </div>\n          </div>\n        </DragDropContext>\n        // </HashRouter>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  lists: state.lists,\n});\n\nconst styles = {\n  listsContainer: {\n    display: \"flex\",\n  },\n};\n\nexport default connect(mapStateToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { Provider } from \"react-redux\";\nimport store, { persistor } from \"./store\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <BrowserRouter basename=\"/trello-board\">\n    <React.StrictMode>\n      <Provider store={store}>\n        <PersistGate persistor={persistor}>\n          <App />\n        </PersistGate>\n      </Provider>\n    </React.StrictMode>\n  </BrowserRouter>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}